import Head from 'next/head'
import Image from 'next/image'
import { useState, useRef, useEffect } from 'react'
import styles from '../styles/Home.module.css'
import {Contract, providers, utils} from 'ethers';
import Web3Modal from "web3modal";
import {NFT_CONTRACT_ADDRESS,abi} from "../constants";
 
export default function Home() {

  const [tokenIdsMinted,setTokenIdsMinted] = useState(false);
  const [walletConnected,setWalletConnected] = useState(false);
  const [loading,setLoading] = useState(false);
  const web3ModalRef = useRef();

  const publicMint = async () => {
    try{
      const signer = await getProviderOrSigner(true);
      const nftContract = new Contract(NFT_CONTRACT_ADDRESS,abi,signer);
      const tx = await nftContract.mint({value: utils.parseEther("0.01")});
      setLoading(true);
      await tx.wait();
      setLoading(false);
      window.alert("You successfully minted a LW3Punk!");
    }catch(err){
      console.error(err);
    }
  };

  const getTokenIdsMinted = async () => {
    try{
      const provider = await getProviderOrSigner();
      const nftContract = new Contract(NFT_CONTRACT_ADDRESS,abi,provider);
      const _tokenIds = await nftContract.tokenIds();
      setTokenIdsMinted(_tokenIds);
    }catch(err){
      console.error(err);
    }
  };

  const getProviderOrSigner = async (needSigner = false) => {

    const provider = await web3ModalRef.current.connect();
    const web3Provider = new providers.Web3Provider(provider);
    const {chainId} = await web3Provider.getNetwork();
    if(chainId !== 80001){
      window.alert("Change network to Mumbai");
      throw new Error("Change network to Mumbai");
    }
    if(needSigner){
      const signer = web3Provider.getSigner();
      return signer;
    }
    return web3Provider;
  }

  const connectWallet = async () => {
    try{
      await getProviderOrSigner();
      setWalletConnected(true);
    }catch(err){
      console.error(err);
    }
  };

  useEffect(()=> {
    if(!walletConnected){
      web3ModalRef.current = new Web3Modal({
        network: "mumbai",
        providerOptions: {},
        disableInjectedProvider: false,
      });
      connectWallet();
      getTokenIdsMinted();
      setInterval(async function () {
        await getTokenIdsMinted();
      },5*1000);
    }
  },[walletConnected]);

  const renderButton = () => {
    if(!walletConnected) {
      return(
        <button onClick={connectWallet} className = {styles.button}>
          Connect your Wallet!
        </button>
      );
    }
    if(loading){
      return(
        <button className={styles.button}>Loading...</button>
      );
    }
    return(
      <button onClick={publicMint} className ={styles.button}>
        Mint ðŸš€
      </button>
    );
  };
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className={styles.main}>
        <div>
          <h1 className={styles.title}>Welcome to LW3Punks</h1>
        <div className={styles.description}>
          <div>It's an NFT collection for LearnWeb3 students</div>
          <div>{tokenIdsMinted.toString()}/10 have been minted</div>
        </div>
        {renderButton()}
        </div>
        <div>
          <img className={styles.image} src = "./img.png" />
        </div>
      </div>
      
      <footer className={styles.footer}>
        Made with &#10084; by LW3Punks
      </footer>
    </div>
  )
}
